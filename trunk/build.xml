<!--
Copyright 2008 Flaptor (flaptor.com) 

Licensed under the Apache License, Version 2.0 (the "License"); 
you may not use this file except in compliance with the License. 
You may obtain a copy of the License at 

    http://www.apache.org/licenses/LICENSE-2.0 

Unless required by applicable law or agreed to in writing, software 
distributed under the License is distributed on an "AS IS" BASIS, 
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
See the License for the specific language governing permissions and 
limitations under the License.
-->

<project name="clusterfest" default="jar" basedir=".">
    <property name="project" value="clusterfest"/>
    <property name="version" value="trunk"/>

    <property name="src.dir" value="${basedir}/src"/>
    <property name="test.dir" value="${basedir}/test"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="conf.dir" value="${basedir}/conf"/>
    
    <property name="dist.dir" value="${basedir}/dist" />
	<property name="doc.dir" value="${basedir}/docs" />
	<property name="javadoc.dir" value="${doc.dir}/javadoc"/>
    <property name="output.dir"  location="${basedir}/output"/>
    <property name="bin.dir" location="${basedir}/bin"/>    
    <property name="tmp.dir" location="${basedir}/tmp"/>
    <property name="tmp.bin.dir" location="${tmp.dir}/bin"/>
    <property name="tmp.conf.dir" location="${tmp.dir}/conf"/>

    <tstamp>
       <format property="now" pattern="HH:mm:ss d-MMMM-yyyy"/>
    </tstamp>

    <path id="classpath.jars.util">
        <fileset dir="${lib.dir}">
            <include name="flaptor-util-trunk.jar" />
        </fileset>
    </path>

    <path id="classpath.jars.tools">
        <pathelement location="${build.dir}" />
        <fileset dir="${basedir}/tools">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <!--******************************************************************************************************-->
    <target name="compile" depends="prepare" description="compiles everything">
        <javac destdir="${build.dir}" debug="true" debuglevel="lines,vars,source" target="5" >
          <compilerarg value="-Xlint:deprecation" />
          <compilerarg value="-Xlint:unchecked" />
      <compilerarg value="-target" />
      <compilerarg value="5" />

          <classpath>
            <path refid="classpath.jars.util" />
            <path refid="classpath.jars.tools" />
          </classpath>
            <src path="${src.dir}/com/flaptor" />
            <src path="${test.dir}/com/flaptor" />
        </javac>
    </target>

    <!--******************************************************************************************************-->
    <target name="clean">
        <delete dir="${build.dir}" />
        <delete dir="${output.dir}" />
        <delete dir="${javadoc.dir}" />
        <delete dir="${tmp.dir}" />
        <delete dir="${dist.dir}" />
        <delete dir="${basedir}/reports" />
        <delete file="${basedir}/cobertura.ser"/>
        <delete>
            <fileset dir="${basedir}" includes="TEST-*.txt" />
        </delete>
    </target>
    
    <target name="clean-tmp">
        <delete dir="${tmp.dir}"/>
    </target>

    
    <!--******************************************************************************************************-->
    <target name="prepare">
        <delete dir="${output.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${output.dir}"/>
    </target>


    <!--******************************************************************************************************-->
    <target name="libjar" depends="compile" description="builds the clusterfest jar file for use in other flaptor projects" >
        <jar jarfile="${output.dir}/${project}-${version}.jar" >
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Version" value="${version}"/>
            </manifest>

        	<fileset dir="${src.dir}">
                <include name="web-clustering/**"/>
            </fileset>

            <fileset dir="${build.dir}" excludes="**/*Test.class">
                <include name="com/flaptor/**/*.class"/>
            </fileset>
            <fileset dir="${conf.dir}" >
                <include name="*.properties.defaults"/>
            </fileset>
        </jar>
    </target>

	<!--******************************************************************************************************-->
    <target name="jar" depends="compile" description="builds the clusterfest jar file, including lib jars and webapp files" >
        <jar jarfile="${output.dir}/${project}-${version}.jar" >
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Version" value="${version}"/>
            </manifest>

            <fileset dir="${src.dir}">
                <include name="web-clustering/**"/>
            </fileset>

        	<fileset dir="${build.dir}" excludes="**/*Test.class">
                <include name="com/flaptor/**/*.class"/>
            </fileset>
            <fileset dir="${conf.dir}" >
                <include name="*.properties.defaults"/>
            </fileset>
            <zipgroupfileset dir="${lib.dir}">
                <include name="*.jar" />
            </zipgroupfileset>
        </jar>
    </target>

        <!--******************************************************************************************************-->
        <target name="distjar" depends="compile" description="builds the clusterfest jar file, including lib jars EXCLUDING webapp files, for DIST" >
            <jar jarfile="${output.dir}/${project}-${version}.jar" >
                <manifest>
                    <attribute name="Built-By" value="${user.name}"/>
                    <attribute name="Version" value="${version}"/>
                </manifest>
                <fileset dir="${build.dir}" excludes="**/*Test.class">
                    <include name="com/flaptor/**/*.class"/>
                </fileset>
                <fileset dir="${conf.dir}" >
                    <include name="*.properties.defaults"/>
                </fileset>
                <zipgroupfileset dir="${lib.dir}">
                     <include name="*.jar" />
                </zipgroupfileset>
            </jar>
        </target>

        <target name="dist" depends="clean, distjar, doc">
            <mkdir dir="${dist.dir}"/>
            <copy todir="${tmp.bin.dir}">
                <fileset dir="${bin.dir}"/>
            </copy>
            <copy todir="${tmp.bin.dir}/web-clustering/">
                <fileset dir="${src.dir}/web-clustering/"/>
            </copy>
            <copy todir="${tmp.conf.dir}">
                <fileset dir="${conf.dir}">
                    <include name="*.properties"/>
                </fileset>
            </copy>
            <tar destfile="${dist.dir}/${project}-${version}.tgz" compression="gzip">
                <tarfileset dir="${doc.dir}" prefix="doc"/>
                <tarfileset dir="${output.dir}" prefix="bin">
                    <include name="${project}-${version}.jar" />
                </tarfileset>
                <tarfileset dir="${tmp.bin.dir}" mode="755" prefix="bin"/>
                <tarfileset dir="${tmp.conf.dir}" prefix="bin/conf" />
            </tar>
        </target>

    <!--******************************************************************************************************-->
    <target name="doc" description="creates the clusterfest javadoc" >
        <delete dir="${javadoc.dir}" />
        <mkdir dir="${javadoc.dir}" />
        <javadoc    sourcepath="${src.dir}"
                    destdir="${javadoc.dir}"
                    Private="true"
                    linksource="yes"
                    >
            <fileset dir="${src.dir}" defaultexcludes="yes">
                <include name="com/flaptor/**/*.java" />
            </fileset>
            <fileset dir="${test.dir}" defaultexcludes="yes">
                <include name="com/flaptor/**/*.java" />
            </fileset>
            <doctitle><![CDATA[<h1>Clusterfest Documentation</h1>]]></doctitle>
            <classpath>
              <path refid="classpath.jars.tools" />
              <path refid="classpath.jars.util" />
            </classpath>
            <link href="http://lucene.zones.apache.org:8080/hudson/job/Lucene-Nightly/javadoc/" />
            <link href="http://s1/javadocs/log4j/1.2.11/" />
            <link href="http://junit.sourceforge.net/javadoc/" />
            <taglet name="ToDo" path="tools/taglets.jar" />
            <taglet name="FixMe" path="tools/taglets.jar" />
        </javadoc>
    </target>


    <!--******************************************************************************************************-->
    <!--TESTING-->
    
    <taskdef name="cobertura-instrument" classname="net.sourceforge.cobertura.ant.InstrumentTask">
        <classpath>
            <path refid="classpath.jars.tools"/>
            <path refid="classpath.jars.util" />
        </classpath>
    </taskdef>
    <taskdef name="cobertura-report" classname="net.sourceforge.cobertura.ant.ReportTask">
        <classpath>
            <path refid="classpath.jars.tools"/>
            <path refid="classpath.jars.util" />
        </classpath>
    </taskdef>
    
    <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
        <classpath>
            <path refid="classpath.jars.tools"/>
        </classpath>
    </taskdef>

    <target name="instrument" if="cobertura">
        <cobertura-instrument>
            <fileset dir="${build.dir}">
                <include name="**/*.class"/>
                <exclude name="**/*Test.class"/>
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="report" if="cobertura">
        <cobertura-report format="html" destdir="reports" srcdir="${src.dir}"/>
    </target>

    <target name="test" description="runs the JUnit tests" depends="compile" >
        <antcall target="instrument"/>
        <junit printsummary="on" showoutput="true" haltonfailure="true" fork="on">
            <sysproperty key="net.sourceforge.cobertura.datafile" file="${basedir}/cobertura.ser" />
            <jvmarg value="-Xms256M"/>
            <jvmarg value="-Xmx256M"/>
            <classpath>
              <pathelement path="${conf.dir}" />
              <path refid="classpath.jars.util" />
              <path refid="classpath.jars.tools" />
              <pathelement path="${basedir}" />
            </classpath>
            <formatter type="plain" />
            <batchtest fork="yes" haltonfailure="false" haltonerror="false" failureproperty="ERROR">
                <fileset dir="${src.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
        <antcall target="report"/>

        <fail message="Some tests have failed" if="ERROR"/>
        <delete dir="${basedir}/directoryTestOrigin.tmp" />
        <delete dir="${basedir}/directoryTestDestination.tmp" />
        <delete dir="${basedir}/tmp.test.directory" />
        <delete dir="${basedir}/tmp" />
        <delete file="${basedir}/fileTest.tmp" />
        <delete file="${basedir}/test_category*" />
    </target>


    <target name="onetest" description="runs one JUnit test, specified by -Dtestfile= parameter" depends="compile" >
        <antcall target="instrument"/>
        <junit printsummary="on" showoutput="true" haltonerror="false" haltonfailure="false" fork="true" dir="${basedir}">
            <classpath>
              <pathelement path="${conf.dir}" />
              <path refid="classpath.jars.util" />
              <path refid="classpath.jars.tools" />
              <pathelement path="${basedir}" />
            </classpath>
            <formatter type="plain" />
            <jvmarg value="-Xms256M"/>
            <jvmarg value="-Xmx256M"/>
            <batchtest fork="yes" failureproperty="ERROR">
                <fileset dir="${src.dir}">
                    <include name="**/${testfile}.java"/>
                </fileset>
                <fileset dir="${test.dir}">
                    <include name="**/${testfile}.java"/>
                </fileset>
            </batchtest>
        </junit>
        <antcall target="report"/>
        <fail message="Some tests have failed" if="ERROR"/>

        <delete dir="${basedir}/directoryTestOrigin.tmp" />
        <delete dir="${basedir}/directoryTestDestination.tmp" />
        <delete dir="${basedir}/tmp.test.directory" />
        <delete dir="${basedir}/tmp" />
        <delete file="${basedir}/fileTest.tmp" />
    </target>
</project>

    
    
